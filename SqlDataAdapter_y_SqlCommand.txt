///SqlDataAdapter
						this."SqlCommand" = new SqlConnection(Properties.Settings.Default.Conexion);

			//Configurar el SqlDataAdapter (y su selectCommand)
						this.DataAdapter = new SqlDataAdapter("select * from "NombreTabla, SqlCommand);
						this.da.Fill(this.dt);
			//Configurar el insertCommand del SqlDataAdapter y sus parametros
						this.DataAdapter.InsertCommand= new SqlCommand("insert into "NombreTabla" values(@p1, @p2, @p3)",SqlCommand);
						this.DataAdapter.InsertCommand.Parameters.Add("@p1", SqlDbType."tipo", 50, columna);
						this.DataAdapter.InsertCommand.Parameters.Add("@p2", SqlDbType."tipo", 50, columna);
						this.DataAdapter.InsertCommand.Parameters.Add("@p3", SqlDbType.VarChar, 50, columna);
			//Configurar el updateCommand del SqlDataAdapter y sus parametros
						this.DataAdapter.UpdateCommand = new SqlCommand("update "NombreTabla" set "columna" = @p1, "columna" = @p2 where id = @p3", SqlCommand);
						this.DataAdapter.UpdateCommand.Parameters.Add("@p1", SqlDbType."tipo", 50, columna);
						this.DataAdapter.UpdateCommand.Parameters.Add("@p2", SqlDbType."tipo", 50, columna);
						this.DataAdapter.UpdateCommand.Parameters.Add("@p3", SqlDbType.Int, 50, columna);
			//Configurar el deleteCommand del SqlDataAdapter y sus parametros
						this.DataAdapter.DeleteCommand = new SqlCommand("delete from "NombreTabla" where id = @p1", "SqlCommand");
						this.DataAdapter.DeleteCommand.Parameters.Add("@p1", SqlDbType.Int, 50, "id");
			//Sincronizar el SqlDataAdapter con la BD
						this.DataAdapter.Update(this.DataTable);



///SqlCommand
----------------------------------------------------------------------------
Select
----------------------------------------------------------------------------

///Adaptar el reader para la situacion
	    string retorno = "";
	    using (SqlConnection connection = new SqlConnection(Properties.Settings.Default.Conexion))
            {
                try
                {
                    connection.Open();
                    using (SqlCommand command = new SqlCommand("select * from "nombre-de-tabla, connection))
		    {
                        using (SqlDataReader reader = command.ExecuteReader())
                        {
                            while (reader.Read() != false)
                            {
         			retorno += String.Format("{0} {1} {2}\n", reader["nombre"].ToString(), reader["peso"].ToString(), reader["precio"].ToString());
                            }
                        }
                    }
                }
                catch (Exception error)
                {
                    MessageBox.Show(error.Message, "Error al eliminar", MessageBoxButtons.OK, MessageBoxIcon.Error);
                }
            }

----------------------------------------------------------------------------
Insert
----------------------------------------------------------------------------

	using (SqlConnection connection = new SqlConnection(Properties.Settings.Default.Conexion))
        {
                try
                {
                    connection.Open();
                    using (SqlCommand command = new SqlCommand(string.Format("INSERT INTO "NombreTabla" ("Columnas")VALUES("Variables")", "Variables", Variables), connection))
		    {
                        command.ExecuteNonQuery();
                    }
                }
                catch (Exception error)
                {
                    MessageBox.Show(error.Message, "Error al Insertar", MessageBoxButtons.OK, MessageBoxIcon.Error);
                }
        }

----------------------------------------------------------------------------
Update
----------------------------------------------------------------------------

	using(SqlConnection connection = new SqlConnection(Properties.Settings.Default.Conexion))
	{
		try
		{
			connection.Open();
			using(SqlCommand command = new SqlCommand("update "NombreTabla" set "columna" = "Variable", "columna" = "Variable" where id = "ID"", connection))
			{
				command.ExecuteNonQuery();
			}
		}
		catch (Exception error)
            	{
               		MessageBox.Show(error.Message, "Error al Actualizar", MessageBoxButtons.OK, MessageBoxIcon.Error);
            	}
	}

----------------------------------------------------------------------------
Delete		
----------------------------------------------------------------------------

	using(SqlConnection connection = new SqlConnection(Properties.Settings.Default.Conexion))
	{
		try
		{
			connection.Open();
			using(SqlCommand command = new SqlCommand("DELETE FROM "NombreTabla" WHERE id=" + id, connection))
			{
				command.ExecuteNonQuery();
			}
		}
		catch (Exception error)
            	{
                	MessageBox.Show(error.Message, "Error al Eliminar",MessageBoxButtons.OK,MessageBoxIcon.Error);
            	}
	}

----------------------------------------------------------------------------
Caso particular del Segundo parcial
----------------------------------------------------------------------------

	StringBuilder comandoTexto = new StringBuilder();
	comandoTexto.AppendFormat(System.Globalization.CultureInfo.InvariantCulture, "INSERT INTO frutas ("NombreDeTablas")VALUES('{0}',{1},{2})\n", _manzana.Nombre, _manzana.Peso, 23);
        comandoTexto.AppendFormat(System.Globalization.CultureInfo.InvariantCulture, "INSERT INTO frutas ("NombreDeTablas")VALUES('{0}',{1},{2})\n", _banana.Nombre, _banana.Peso, 23);
        comandoTexto.AppendFormat(System.Globalization.CultureInfo.InvariantCulture, "INSERT INTO frutas ("NombreDeTablas")VALUES('{0}',{1},{2})\n", _durazno.Nombre, _durazno.Peso, 23);

	using(SqlConnection connection = new SqlConnection(Properties.Settings.Default.Conexion))
	{
		try
		{
			cn.open();
			using(SqlCommand command = new SqlCommand(comandoTexto), connection))
			{
				command.ExecuteNonQuery();
			}
		}
		catch (Exception error)
            	{
               		MessageBox.Show(error.Message, "Error al eliminar", MessageBoxButtons.OK, MessageBoxIcon.Error);
            	}
	}
	